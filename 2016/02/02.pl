#!/usr/bin/env perl

use strict;
use warnings;

use Data::Debug;

my @data = <Instructions::DATA>;
   @data = map { chomp $_; $_ } @data;

__PACKAGE__->new->run(@data);
exit;

# package Main
sub new {
    my $class = shift;
    my $self  = {};

    return bless $self, $class;
}

sub run {
    my $self = shift;
    my @data = @_;

    $self->set_3x3_keypad;

    my @code_1;
    for my $line (@data) {
        push @code_1, $self->process_number($line);
    }

    print "\nPART 1\n";

    print join('', @code_1), "\n";

    $self->set_5x5_keypad;

    my @code_2;
    for my $line (@data) {
        push @code_2, $self->process_number($line);
    }

    print "\nPART 2\n";

    print join('', @code_2), "\n";
}

sub set_3x3_keypad {
    my $self = shift;

    # Start on number 5
    $self->{x} = 1;
    $self->{y} = 1;

    $self->{size} = 3;

    $self->{'keypad'} = [
        [1,2,3],
        [4,5,6],
        [7,8,9],
    ];
}

sub set_5x5_keypad {
    my $self = shift;

    # Start on number 5
    $self->{x} = 0;
    $self->{y} = 2;

    $self->{size} = 5;

    $self->{'keypad'} = [
        [undef,undef,1,undef,undef],
        [undef,2,3,4,undef],
        [5,6,7,8,9],
        [undef,'A','B','C',undef],
        [undef,undef,'D',undef,undef],
    ];
}


sub process_number {
    my $self = shift;
    my $line = shift;

    chomp $line;
    my @directions = split //, $line;

    my ($x, $y) = ($self->{x}, $self->{y});

    for my $direction (@directions) {
        SWITCH: {
            $direction =~ /^u$/i && do {
                $y -= 1;
                $y =  0 if $y < 0;
                $y += 1 if ! $self->{'keypad'}->[$y][$x];
                last SWITCH;
            };
            $direction =~ /^d$/i && do {
                $y += 1;
                $y =  $self->{size} - 1 if $y > $self->{size} - 1;
                $y -= 1 if ! $self->{'keypad'}->[$y][$x];
                last SWITCH;
            };
            $direction =~ /^l$/i && do {
                $x -= 1;
                $x =  0 if $x < 0;
                $x += 1 if ! $self->{'keypad'}->[$y][$x];
                last SWITCH;
            };
            $direction =~ /^r$/i && do {
                $x += 1;
                $x =  $self->{size} - 1 if $x > $self->{size} - 1;
                $x -= 1 if ! $self->{'keypad'}->[$y][$x];
                last SWITCH;
            };
        }
    }

    ($self->{x}, $self->{y}) = ($x, $y);

    return $self->{'keypad'}->[$y][$x];
}

package Instructions;

__DATA__
LURLLLLLDUULRDDDRLRDDDUDDUULLRLULRURLRRDULUUURDUURLRDRRURUURUDDRDLRRLDDDDLLDURLDUUUDRDDDLULLDDLRLRRRLDLDDDDDLUUUDLUULRDUDLDRRRUDUDDRULURULDRUDLDUUUDLUDURUURRUUDRLDURRULURRURUUDDLRLDDDDRDRLDDLURLRDDLUDRLLRURRURRRURURRLLRLDRDLULLUDLUDRURDLRDUUDDUUDRLUDDLRLUDLLURDRUDDLRURDULLLUDDURULDRLUDLUDLULRRUUDDLDRLLUULDDURLURRRRUUDRUDLLDRUDLRRDUDUUURRULLDLDDRLUURLDUDDRLDRLDULDDURDLUUDRRLDRLLLRRRDLLLLURDLLLUDRUULUULLRLRDLULRLURLURRRDRLLDLDRLLRLULRDDDLUDDLLLRRLLLUURLDRULLDURDLULUDLRLDLUDURLLLURUUUDRRRULRDURLLURRLDLRLDLDRRUUDRDDDDDRDUUDULUL
RRURLURRULLUDUULUUURURULLDLRLRRULRUDUDDLLLRRRRLRUDUUUUDULUDRULDDUDLURLRRLLDLURLRDLDUULRDLLLDLLULLURLLURURULUDLDUDLUULDDLDRLRRUURRRLLRRLRULRRLDLDLRDULDLLDRRULRDRDUDUUUDUUDDRUUUDDLRDULLULDULUUUDDUULRLDLRLUUUUURDLULDLUUUULLLLRRRLDLLDLUDDULRULLRDURDRDRRRDDDLRDDULDLURLDLUDRRLDDDLULLRULDRULRURDURRUDUUULDRLRRUDDLULDLUULULRDRDULLLDULULDUDLDRLLLRLRURUDLUDDDURDUDDDULDRLUDRDRDRLRDDDDRLDRULLURUDRLLUDRLDDDLRLRDLDDUULRUDRLUULRULRLDLRLLULLUDULRLDRURDD
UUUUUURRDLLRUDUDURLRDDDURRRRULRLRUURLLLUULRUDLLRUUDURURUDRDLDLDRDUDUDRLUUDUUUDDURRRDRUDDUURDLRDRLDRRULULLLUDRDLLUULURULRULDRDRRLURULLDURUURDDRDLLDDDDULDULUULLRULRLDURLDDLULRLRRRLLURRLDLLULLDULRULLDLRULDDLUDDDLDDURUUUURDLLRURDURDUUDRULDUULLUUULLULLURLRDRLLRULLLLRRRRULDRULLUURLDRLRRDLDDRLRDURDRRDDDRRUDRLUULLLULRDDLDRRLRUDLRRLDULULRRDDURULLRULDUDRLRUUUULURLRLRDDDUUDDULLULLDDUDRLRDDRDRLDUURLRUULUULDUDDURDDLLLURUULLRDLRRDRDDDUDDRDLRRDDUURDUULUDDDDUUDDLULLDRDDLULLUDLDDURRULDUDRRUURRDLRLLDDRRLUUUDDUUDUDDDDDDDLULURRUULURLLUURUDUDDULURDDLRDDRRULLLDRRDLURURLRRRDDLDUUDR
URLLRULULULULDUULDLLRDUDDRRLRLLLULUDDUDLLLRURLLLLURRLRRDLULRUDDRLRRLLRDLRRULDLULRRRRUUDDRURLRUUDLRRULDDDLRULDURLDURLRLDDULURDDDDULDRLLUDRULRDDLUUUDUDUDDRRUDUURUURLUUULRLULUURURRLRUUULDDLURULRRRRDULUDLDRLLUURRRLLURDLDLLDUDRDRLLUDLDDLRLDLRUDUULDRRLLULDRRULLULURRLDLUUDLUDDRLURDDUDRDUDDDULLDRUDLRDLRDURUULRRDRUUULRUURDURLDUDRDLLRUULUULRDDUDLRDUUUUULDDDDDRRULRURLLRLLUUDLUDDUULDRULDLDUURUDUDLRULULUULLLLRLULUDDDRRLLDRUUDRLDDDRDDURRDDDULURDLDLUDDUULUUURDULDLLULRRUURDDUDRUULDLRLURUDLRDLLLDRLDUURUDUDRLLLDDDULLUDUUULLUUUDLRRRURRRRRDUULLUURRDUU
UDULUUDLDURRUDDUDRDDRRUULRRULULURRDDRUULDRLDUDDRRRRDLRURLLLRLRRLLLULDURRDLLDUDDULDLURLURUURLLLDUURRUUDLLLUDRUDLDDRLRRDLRLDDDULLRUURUUUDRRDLLLRRULDRURLRDLLUDRLLULRDLDDLLRRUDURULRLRLDRUDDLUUDRLDDRUDULLLURLRDLRUUDRRUUDUDRDDRDRDDLRULULURLRULDRURLURLRDRDUUDUDUULDDRLUUURULRDUDRUDRULUDDULLRDDRRUULRLDDLUUUUDUDLLLDULRRLRDDDLULRDUDRLDLURRUUDULUDRURUDDLUUUDDRLRLRLURDLDDRLRURRLLLRDRLRUUDRRRLUDLDLDDDLDULDRLURDURULURUDDDUDUULRLLDRLDDDDRULRDRLUUURD
